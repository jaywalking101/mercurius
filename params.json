{"name":"Mercurius","tagline":"An AngularJS Notifier Module","body":"An AngularJS Notifier Module\r\n============================\r\n\r\nCheck out the demo at http://anzol.biz/mercurius.\r\n\r\nThis project contains one module(**notifier**) one service (**notifier**) and three directives (**stNotifierLoader**, **stNotifier** and **stNotification**).\r\nIt depends on Angularjs modules **ngAnimate** and **ngSanitize**. (also, **jQuery**)\r\nThe style comes from Bootstrap.\r\n\r\n## How to Use It\r\n\r\nFirst reference the stylesheet and the js file (the module itself):\r\n\r\n    <link\r\n        href=\"your/path/to/notifier.css\"\r\n        rel=\"stylesheet\"\r\n        >\r\n\r\n    <script\r\n        src=\"your/path/to/notifier.js\"\r\n        >\r\n    </script>\r\n\r\nPut **notifier** as a dependency in your module and configure the URL to the template file (the path to notifier.html):\r\n\r\n    angular\r\n        .module('YOUR_MODULE', [\r\n            'notifier'\r\n        ])\r\n        .config(function config(notifierProvider) {\r\n            // this example path represent how I organize my modules...\r\n            notifierProvider.notifierConfiguration.templateUrl = '/js/modules/notifier/notifier.html';\r\n        })\r\n\r\nThen you'll inject the notifier service wherever you need it, like in the provided demo:\r\n\r\n    .controller('demo', [\r\n        '$scope',\r\n        'notifier',\r\n        function demoController(\r\n            $scope,\r\n            notifier\r\n        ) {\r\n            'use strict';\r\n\r\nYou must also declare the **stNotifierLoader** directive in your html. For example, in the **body** tag:\r\n\r\n    <body\r\n        data-ng-controller=\"demo\"\r\n        data-st-notifier-loader\r\n        >\r\n\r\nAnd, finally, you can use it like this:\r\n\r\n    // notifier(content, configuration);\r\n    // for example:\r\n    notifier('Greendale Community College rules!', {\r\n        dismissable: true,\r\n        location: 'topMiddle',\r\n        timeout: null,\r\n        type: 'warning',\r\n        width: 'auto'\r\n    });\r\n\r\nThe above example uses the default values for the configuration object. Of course, you only have to define the properties that differ from the defaults.\r\n\r\n    notifier('I have a bad feeling about this...', {\r\n        type: 'info',\r\n        width: 800\r\n    });\r\n\r\n    notifier('<strong>No!</strong> We ain\\'t gonna take it!', {\r\n        type: 'danger',\r\n        dismissable: false,\r\n        timeout: 10000\r\n    });\r\n\r\nThe **notifier** function return an interface object for the created **notification** with three methods (so far):\r\n\r\n### content(value:String):\r\nTo change the content of the notification programmatically or access its current value.\r\n\r\n### remove():\r\nTo remove the notification.\r\n\r\n    var n = notifier('Frankly, my dear, I don\\'t give a damn...');\r\n    setTimeout(function () {\r\n        n.remove();\r\n    }, 10000);\r\n\r\n### type([value]):\r\nTo change the type of the notification programmatically or access its current value.\r\n\r\nWith content and type functions you can usually turn a warning notification in an error or success, for example.\r\n\r\n## History\r\n\r\n### 1.0.0\r\n@2014-02-23: Version 1.0.0 is here! =)\r\n\r\n\r\nMost feedback is welcome! Open an issue or drop me a line!: slacktracer@gmail.com\r\n\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Thiago Figueiredo\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}